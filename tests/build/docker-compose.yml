version: "3"

services:
  postgres:
    env_file: .env
    image: postgres:12.5-alpine
    container_name: postgres
    ports:
      - "5432:5432"

  users-service:
    image: ghcr.io/smartassert/users:0.8
    container_name: users-service
    environment:
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/users?serverVersion=12&charset=utf8
      JWT_PASSPHRASE: non-empty-string
      PRIMARY_ADMIN_TOKEN: primary_admin_token
      SECONDARY_ADMIN_TOKEN: secondary_admin_token
      IS_READY: 1
    depends_on:
      - postgres

  users-http:
    image: caddy:2.4.5-alpine
    container_name: users-http
    restart: unless-stopped
    ports:
      - "9080:80"
    links:
      - users-service:app
    volumes:
      - ./http-config/caddy/index.php:/app/public/index.php
      - ./http-config/caddy/Caddyfile:/etc/caddy/Caddyfile

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - "9090:80"
    links:
      - app:app

  app:
    build:
      context: ../..
      args:
        DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/worker_manager?serverVersion=12&charset=utf8
        MESSENGER_TRANSPORT_DSN: doctrine://default
        PRIMARY_DIGITALOCEAN_API_TOKEN: ${PRIMARY_DIGITALOCEAN_API_TOKEN}
        SECONDARY_DIGITALOCEAN_API_TOKEN: ${SECONDARY_DIGITALOCEAN_API_TOKEN}
        VERSION: ${VERSION}
        AUTHENTICATION_BASE_URL: http://users-http
    container_name: smartassert-worker-manager
    depends_on:
      - postgres
      - users-service
