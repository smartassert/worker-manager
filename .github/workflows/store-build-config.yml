name: Store build config

on:
  repository_dispatch:
    types: [worker-deploy]
  workflow_dispatch:
    inputs:
      worker_image:
        description: Worker image ID
        required: true

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      worker-image: ${{ steps.worker-image.outputs.value }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT_TOKEN_SELF }}

      - name: Checkout bash-ga-ci-tools
        uses: actions/checkout@v2
        with:
          repository: smartassert/bash-ga-ci-tools
          path: ./vendor/smartassert/bash-ga-ci-tools
          ref: main

      - name: Set worker image version
        id: worker-image
        env:
          VALUE1: ${{ github.event.client_payload.worker_image }}
          VALUE2: ${{ github.event.inputs.worker_image }}
        run: echo "::set-output name=value::$(./vendor/smartassert/bash-ga-ci-tools/src/select-exclusive-value-from-two-values.sh)"

  verify-setup:
    name: Verify setup
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Verify worker image
        env:
          VALUE: ${{ needs.setup.outputs.worker-image }}
        run: |
          [ "" != "$VALUE" ] && echo "$VALUE"

  update-build-configuration:
    name: Update build configuration
    runs-on: ubuntu-latest
    needs: [setup, verify-setup]
    outputs:
      create-release: ${{ steps.auto-commit-action.outputs.changes_detected }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT_TOKEN_SELF }}

      - name: Update
        env:
          WORKER_IMAGE: ${{ needs.setup.outputs.worker-image }}
        run: echo "WORKER_IMAGE=$WORKER_IMAGE" > build.env

      - name: Commit
        id: auto-commit-action
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Automatic build.env for worker image ${{ needs.setup.outputs.worker-image }}"

  trigger-create-release:
    name: Trigger create release workflow
    runs-on: ubuntu-latest
    needs: [setup, update-build-configuration]
    if: ${{ needs.update-build-configuration.outputs.create-release == 'true' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT_TOKEN_SELF }}

      - name: Get latest commit hash
        id: commit-hash
        run: echo "::set-output name=value::$(git rev-parse HEAD)"

      - name: Trigger workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Create release
          token: ${{ secrets.PAT_TOKEN_SELF }}
          inputs: |
            {
              "commit-hash": "${{ steps.commit-hash.outputs.value }}",
              "should-release": "${{ steps.commit-hash.outputs.value }}"
            }
