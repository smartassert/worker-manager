name: Store build config

on:
  repository_dispatch:
    types: [worker-deploy]
  workflow_dispatch:
    inputs:
      worker_image:
        description: Worker image ID
        required: true

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.value }}
      worker-image: ${{ steps.worker-image.outputs.value }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT_TOKEN_SELF }}

      - name: Set version
        id: version
        run: echo "::set-output name=value::$(./ci/scripts/create-version-label.sh)"

      - name: Set worker image version
        id: worker-image
        env:
          REPOSITORY_DISPATCH_WORKER_IMAGE: ${{ github.event.client_payload.worker_image }}
          WORKFLOW_DISPATCH_WORKER_IMAGE: ${{ github.event.inputs.worker_image }}
        run: |
          WORKER_IMAGE=$(./ci/scripts/select-worker-image-input.sh)
          echo "::set-output name=value::$WORKER_IMAGE"

  verify-setup:
    name: Verify setup
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Verify version
        env:
          VALUE: ${{ needs.setup.outputs.version }}
        run: |
          if [ -z "$VALUE" ]; then
            echo "Version has not been set"
            exit 1
          fi

          echo "$VALUE"

      - name: Verify worker image version
        env:
          VALUE: ${{ needs.setup.outputs.worker-image }}
        run: |
          if [ -z "$VALUE" ]; then
            echo "Worker image has not been set"
            exit 1
          fi

          echo "$VALUE"

  update-build-configuration:
    name: Update build configuration
    runs-on: ubuntu-latest
    needs: [setup, verify-setup]
    outputs:
      create-release: ${{ steps.auto-commit-action.outputs.changes_detected }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT_TOKEN_SELF }}

      - name: Update
        env:
          WORKER_IMAGE: ${{ needs.setup.outputs.worker-image }}
        run: echo "WORKER_IMAGE=$WORKER_IMAGE" > build.env

      - name: Commit
        id: auto-commit-action
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Automatic build.env for worker image ${{ needs.setup.outputs.worker-image }}"

  create-release:
    name: Create release
    runs-on: ubuntu-latest
    needs: [setup, update-build-configuration]
    if: ${{ needs.update-build-configuration.outputs.create-release == 'true' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT_TOKEN_SELF }}

      - name: Get latest commit hash
        id: commit_hash
        run: echo "::set-output name=value::$(git rev-parse HEAD)"

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN_SELF }}
          TAG: ${{ needs.setup.outputs.version }}
          TARGET: ${{ steps.commit_hash.outputs.value }}
          TITLE: "Automatic release ${{ needs.setup.outputs.version }}"
          NOTES: "Worker image ${{ needs.setup.outputs.worker-image }}"
        run: gh release create "$TAG" --target "$TARGET" --title "$TITLE" --notes "$NOTES"
