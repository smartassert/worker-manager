name: Release

on:
  push:
    branches:
      - main
  release:
    types:
      - published

jobs:
  build:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set env.service_version
        env:
          RELEASE_TAG_NAME: ${{ github.event.release.tag_name }}
        run: |
          [[ -n "$RELEASE_TAG_NAME" ]] && echo "service_version=$RELEASE_TAG_NAME" >> "$GITHUB_ENV" || echo "service_version=master" >> "$GITHUB_ENV"

      - name: Set env.worker_image
        id: build_config
        run: echo "worker_image=$(cat ./worker_image)" >> "$GITHUB_ENV"

      - name: Examine build config
        run: |
          echo WORKER_IMAGE ${{ env.worker_image }}
          echo VERSION ${{ env.service_version }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Github Container Repository
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ghcr.io/smartassert/worker-manager:${{ env.service_version }}
          build-args: |
            VERSION=${{ env.service_version }}
            WORKER_IMAGE=${{ env.worker_image }}

      - name: Trigger deploy workflow
        if: ${{ github.event_name == 'release' }}
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN_SELF }}
        run:
          gh workflow run deploy.yml -f worker_manager_version="${{ env.service_version }}"
