name: Create release

on:
  workflow_dispatch:
    inputs:
      commit_hash:
        description: Commit hash to release from
        required: true
      should_release:
        description: Create release?
        required: true
        default: "true"

jobs:
  create-release:
    name: Create release
    runs-on: ubuntu-latest

    steps:
      - name: Output inputs
        env:
          INPUTS: ${{ toJson(github.event.inputs) }}
        run: jq '.' <<< "$INPUTS"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.commit_hash }}

      - name: Set env.should_release
        run: |          
          SHOULD_RELEASE="${{ github.event.inputs.should_release }}"

          if [ "$SHOULD_RELEASE" != "true" ]; then
            SHOULD_RELEASE="false"
          fi

          echo "should_release=$SHOULD_RELEASE" >> "$GITHUB_ENV"

      - name: Set env.release_tag
        run: |
          RELEASE_TAG=$(./ci/scripts/create-version-label.sh)
          TAG_EXISTENCE_COUNT=$(git tag | grep "$RELEASE_TAG" -c | cat)

          if [ "0" != "$TAG_EXISTENCE_COUNT" ]; then
            echo "Generated release tag \"$RELEASE_TAG\" already exists"
            git tag
            exit 1
          fi

          echo "release_tag=$RELEASE_TAG" >> "$GITHUB_ENV"

      - name: Set env.worker_image
        run: |
          WORKER_IMAGE=$(cat ./worker_image)
          if [ "" = "$WORKER_IMAGE" ]; then
            echo "worker_image not set"
            exit 1
          fi

          echo "worker_image=$WORKER_IMAGE" >> "$GITHUB_ENV"

      - name: Verify setup
        run: |
          echo "commit_hash: ${{ github.event.inputs.commit_hash }}"
          echo "should_release: ${{ env.should_release }}"
          echo "release_tag: ${{ env.release_tag }}"
          echo "worker_image: ${{ env.worker_image }}"

      - name: Create release
        if: ${{ env.should_release == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN_SELF }}
          TAG: ${{ env.release_tag }}
          TARGET: ${{ github.event.inputs.commit_hash }}
          TITLE: "Automatic release ${{ env.release_tag }}"
          NOTES: "Worker image ${{ env.worker_image }}"
        run: gh release create "$TAG" --target "$TARGET" --title "$TITLE" --notes "$NOTES"
