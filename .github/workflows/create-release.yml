name: Create release

on:
  workflow_dispatch:
    inputs:
      commit_hash:
        description: Commit hash to release from
        required: true
      should_release:
        description: Create release?
        required: true
        default: "true"

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      commit-hash: ${{ github.event.inputs.commit_hash }}
      should-release: ${{ github.event.inputs.should_release }}
      release-tag: ${{ steps.release_tag.outputs.value }}
      worker-image: ${{ steps.worker_image.outputs.value }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.commit_hash }}

      - name: Set release tag
        id: release_tag
        run: echo "::set-output name=value::$(./ci/scripts/create-version-label.sh)"

      - name: Read worker image
        id: worker_image
        run: echo "::set-output name=value::$(cat ./worker_image)"

  verify-setup:
    name: Verify setup
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout bash-ga-ci-tools
        uses: actions/checkout@v2
        with:
          repository: smartassert/bash-ga-ci-tools
          path: ./vendor/smartassert/bash-ga-ci-tools
          ref: main

      - name: Output
        env:
          OUTPUTS: ${{ toJson(needs.setup.outputs) }}
        run: |
          echo "$OUTPUTS"
          ./vendor/smartassert/bash-ga-ci-tools/src/json-contains-no-empty-values.sh

  create-release:
    name: Create release
    runs-on: ubuntu-latest
    needs: [setup, verify-setup]
    if: ${{ needs.setup.outputs.should-release == 'true' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.setup.outputs.commit-hash }}

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN_SELF }}
          TAG: ${{ needs.setup.outputs.release-tag }}
          TARGET: ${{ needs.setup.outputs.commit-hash }}
          TITLE: "Automatic release ${{ needs.setup.outputs.release-tag }}"
          NOTES: "Worker image ${{ needs.setup.outputs.worker-image }}"
        run: gh release create "$TAG" --target "$TARGET" --title "$TITLE" --notes "$NOTES"
